{"ast":null,"code":"var _jsxFileName = \"/home/cdot/Desktop/zeeshan/GLAY/glay/src/components/ArticleView.js\",\n  _s = $RefreshSig$();\n// Front-end code using React\n\nimport React, { useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArticleView() {\n  _s();\n  const [pass_key, setPassKey] = useState('');\n  const {\n    link_name\n  } = useParams();\n  const [content, setContent] = useState('');\n  const linkRef = useRef();\n  const retrieveContent = (link_name, pass_key) => {\n    return axios.post(`http://localhost:3000/api/link/${link_name}`, {}, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        pass_key\n      })\n    }).then(response => {\n      const data = response.data;\n      console.log('Content:', data);\n      setContent(data);\n      // Handle the retrieved content here\n      return data;\n    }).catch(error => {\n      console.error('Error:', error);\n      console.log('ERROR:', error.message);\n      // Handle the error here\n      throw error; // Re-throw the error to propagate it further if needed\n    });\n  };\n\n  retrieveContent('link_name', 'pass_key').then(content => {\n    // Do something with the retrieved content\n    console.log(content);\n  }).catch(error => {\n    // Handle the error\n    console.log(error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"retrive\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pass_key\",\n        children: [\"Your Link Name is : \", link_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-pass\",\n        type: \"password\",\n        placeholder: \"Pass key For This Link :\",\n        value: pass_key,\n        ref: linkRef,\n        onChange: e => setPassKey(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: retrieveContent,\n        children: \"Retrieve Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticleView, \"EqZWQc5ugT7pDjV2392zQNZzNb8=\", false, function () {\n  return [useParams];\n});\n_c = ArticleView;\nexport default ArticleView;\nvar _c;\n$RefreshReg$(_c, \"ArticleView\");","map":{"version":3,"names":["React","useState","useRef","useParams","axios","jsxDEV","_jsxDEV","ArticleView","_s","pass_key","setPassKey","link_name","content","setContent","linkRef","retrieveContent","post","headers","body","JSON","stringify","then","response","data","console","log","catch","error","message","id","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","ref","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/cdot/Desktop/zeeshan/GLAY/glay/src/components/ArticleView.js"],"sourcesContent":["// Front-end code using React\n\nimport React, { useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nfunction ArticleView() {\n    const [pass_key, setPassKey] = useState('');\n    const { link_name } = useParams();\n    const [content, setContent] = useState('');\n    const linkRef = useRef();\n\n    const retrieveContent = (link_name, pass_key) => {\n      return axios\n        .post(`http://localhost:3000/api/link/${link_name}`, {\n          \n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ pass_key }),\n        })\n        .then((response) => {\n          const data = response.data;\n          console.log('Content:', data);\n          setContent(data);\n          // Handle the retrieved content here\n          return data;\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n          console.log('ERROR:', error.message);\n          // Handle the error here\n          throw error; // Re-throw the error to propagate it further if needed\n        });\n    };\n  \n    retrieveContent('link_name', 'pass_key')\n  .then((content) => {\n    // Do something with the retrieved content\n    console.log(content);\n  })\n  .catch((error) => {\n    // Handle the error\n    console.log(error);\n  });\n\n\n    \n  return (\n    <form id=\"retrive\">\n        <div>\n          <label htmlFor=\"pass_key\">Your Link Name is : {link_name}</label>\n          <input\n            className='input-pass'\n            type=\"password\"\n            placeholder=\"Pass key For This Link :\"\n            value={pass_key}\n            ref={linkRef}\n            onChange={(e) => setPassKey(e.target.value)}\n            required\n          />\n        </div>\n        \n        <div>\n        <button onClick={retrieveContent}>Retrieve Content</button>\n        <p>{content}</p>\n        </div>\n    </form>\n  );\n}\n\nexport default ArticleView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}