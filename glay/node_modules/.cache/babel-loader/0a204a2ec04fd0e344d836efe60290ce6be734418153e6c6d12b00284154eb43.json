{"ast":null,"code":"var _jsxFileName = \"/home/cdot/Desktop/zeeshan/GLAY/glay/src/components/view/ContentViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './contentViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentViewer() {\n  _s();\n  const [pass_key, setPassKey] = useState('');\n  const [link_name, setLinkName] = useState('');\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    // Extract the content URL from the browser's tab search bar\n    const currentURL = window.location.href;\n    const parts = currentURL.split('/'); // Split the URL by '/'\n    const name = parts[parts.length - 1]; // Get the last part\n\n    // Update the contentURL state with the extracted value\n    setLinkName(name);\n  }, []);\n  const handleVerifyContent = async () => {\n    try {\n      // Send a request to your API to verify the content URL and pass_key\n      const response = await fetch(`/api/link/${link_name}/${pass_key}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          link_name: link_name,\n          pass_key: pass_key\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setContent(data.content);\n      } else {\n        alert('Incorrect pass_key or content URL');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"login\",\n        children: \"Pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subscribe_button\",\n        onclick: \"subscribeOnClick()\",\n        children: \"subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subscribing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"thanks\",\n        children: \" Thank you. You have been subscribed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ContentViewer, \"tAcXwUozMIjZJdleSSHKQCrGzNc=\");\n_c = ContentViewer;\nexport default ContentViewer;\nvar _c;\n$RefreshReg$(_c, \"ContentViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContentViewer","_s","pass_key","setPassKey","link_name","setLinkName","content","setContent","currentURL","window","location","href","parts","split","name","length","handleVerifyContent","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onclick","_c","$RefreshReg$"],"sources":["/home/cdot/Desktop/zeeshan/GLAY/glay/src/components/view/ContentViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './contentViewer.css';\n\n\nfunction ContentViewer() {\n  const [pass_key, setPassKey] = useState('');\n  const [link_name, setLinkName] = useState('');\n  const [content, setContent] = useState('');\n\n  useEffect(() => {\n    // Extract the content URL from the browser's tab search bar\n    const currentURL = window.location.href;\n    const parts = currentURL.split('/'); // Split the URL by '/'\n    const name = parts[parts.length - 1]; // Get the last part\n\n    // Update the contentURL state with the extracted value\n    setLinkName(name);\n  }, []);\n\n  const handleVerifyContent = async () => {\n    try {\n      // Send a request to your API to verify the content URL and pass_key\n      const response = await fetch(`/api/link/${link_name}/${pass_key}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ link_name: link_name, pass_key: pass_key }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setContent(data.content);\n      } else {\n        alert('Incorrect pass_key or content URL');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  return (\n    \n    <div className=\"container\">\n  <div className=\"login_bar\">\n    <span className=\"login\">Pass</span>\n    <span className=\"subscribe_button\" onclick=\"subscribeOnClick()\">subscribe</span>\n    <span className=\"subscribing\"></span>\n    <span className=\"thanks\"> Thank you. You have been subscribed</span>\n  </div>\n</div>\n  );\n}\n\nexport default ContentViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACQ,SAAS,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;IACvC,MAAMC,KAAK,GAAGJ,UAAU,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,MAAMC,IAAI,GAAGF,KAAK,CAACA,KAAK,CAACG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEtC;IACAV,WAAW,CAACS,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYd,SAAU,IAAGF,QAAS,EAAC,EAAE;QACjEiB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB,SAAS,EAAEA,SAAS;UAAEF,QAAQ,EAAEA;QAAS,CAAC;MACnE,CAAC,CAAC;MAEF,IAAIe,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCnB,UAAU,CAACkB,IAAI,CAACnB,OAAO,CAAC;MAC1B,CAAC,MAAM;QACLqB,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBAEE7B,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC5BhC,OAAA;MAAK+B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhC,OAAA;QAAM+B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnCpC,OAAA;QAAM+B,SAAS,EAAC,kBAAkB;QAACM,OAAO,EAAC,oBAAoB;QAAAL,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChFpC,OAAA;QAAM+B,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCpC,OAAA;QAAM+B,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAAClC,EAAA,CAhDQD,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AAkDtB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}